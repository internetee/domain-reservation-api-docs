openapi: 3.0.0
info:
  title: Business Registry API
  version: 1.0.0
  description: |
    # API for managing domain name registration and reservation in the business registry.

    ## Key features:
    - **Free short-term domain reservation** (7 days)
    - **Paid long-term domain reservation** (1 year)
    - **Batch domain reservation** (up to 20 domains per request)
    - **Payment status tracking** with access to domain passwords
    - **Registration code retrieval**

    ## Process Overview:
    ### 1. Domain Name Suggestions: 
       Use the `/business_registry/domain_names` endpoint to receive suggestions for available domain names.

    ### 2. Domain Reservation Options:
       - **Short-term Reservation:** Use `/business_registry/reserve_domains` for free 7-day reservation
       - **Long-term Reservation:** Use `/business_registry/long_reserve_domains` for paid 1-year reservation
         _(Price depends on the number of domains reserved)_

    ### 3. Payment and Status Tracking:
       - For long-term reservations, use `/business_registry/long_reserve_domains_status` to:
         * Check payment status
         * Access domain passwords after successful payment

    ## Important Notes:
    - **Maximum limit:** 20 domains per request
    - **Authentication:** All endpoints require both IP authentication and token authentication via the Authorization header
    - **Payment processing:** Handled through Linkpay Everypay without automatic redirects
    - **Payment verification:** After payment, use the status endpoint (`/business_registry/long_reserve_domains_status`) 
      to verify payment completion as payment notifications are processed on our backend
    - **Important:** It's crucial to store the `user_unique_id` for both paid and free reservations:
      * For paid reservations: Ensures domain ownership for the first paying user
      * For free reservations: Required to retrieve domain passwords and reservation details later using 
        the `/business_registry/reserve_domains/{user_unique_id}` endpoint

    ### Long-term reservation process:
      * Each user requesting long-term domain reservation receives a unique payment link and invoice in Everypay
      * If domains in a new reservation request overlap with existing unpaid reservations, a new invoice
        with the same number but different `user_unique_id` is created
      * When one user completes payment, all other invoices with the same number are automatically cancelled
        (Everypay Linkpay behavior)
      * Users with cancelled invoices need to submit a new reservation request for their desired domains


servers:
  - url: https://api.example.com/v1
    description: Main API server

paths:
  /api/v1/business_registry/domain_names/{organization_name}:
    get:
      tags:
        - Business Registry
      summary: Get available domain name variants for an organization
      description: Generates and checks availability of domain name variants for a given organization name
      parameters:
        - name: organization_name
          in: path
          required: true
          schema:
            type: string
          description: Name of the organization to generate domain variants for
          example: "Example Company"
      responses:
        '200':
          description: Successful response with available domain variants
          content:
            application/json:
              schema:
                type: object
                properties:
                  variants:
                    type: array
                    items:
                      type: string
                    description: List of available domain name variants
                    example: ["example.ee", "examplecompany.ee"]
        '400':
          description: Invalid organization name
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid organization name"
      security:
        - ipRestriction: []
          ApiTokenAuth: []


  /api/v1/business_registry/long_reserve_domains:
    post:
      tags:
        - Business Registry
      summary: Reserve multiple domains for long-term registration
      description: Creates long-term domain reservations and returns payment information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - domain_names
              properties:
                domain_names:
                  type: array
                  items:
                    type: string
                  description: Array of domain names to reserve
                  example: ["example.ee", "example2.ee"]
      responses:
        '201':
          description: Domains successfully reserved (pending payment)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Domains are in pending status. Need to pay for domains."
                  linkpay_url:
                    type: string
                    description: URL for payment processing
                    example: "https://payment.example.com/invoice/123"
                  invoice_number:
                    type: string
                    description: Generated invoice number
                    example: "1234567"
                  user_unique_id:
                    type: string
                    description: Unique identifier for the user
                    example: "user-123-xyz"
                  available_domains:
                    type: array
                    items:
                      type: string
                    description: List of domains that were available and reserved
                    example: ["example.ee", "example2.ee"]
        '400':
          description: Bad request - Invalid parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid parameter: domain_names must be a non-empty array of valid domain names"
        '422':
          description: Unprocessable Entity - Domain availability or validation issues
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Some domains are not available"
                  details:
                    type: object
                    description: Optional additional error details
      security:
        - ipRestriction: []
          ApiTokenAuth: []


  /api/v1/business_registry/long_reserve_domains_status:
    get:
      tags:
        - Business Registry
      summary: Check status of reserved domains
      description: Returns the current status of reserved domains and payment information
      parameters:
        - name: invoice_number
          in: query
          required: true
          schema:
            type: string
          description: Invoice number for the reserved domains
          example: "1234567"
        - name: user_unique_id
          in: query
          required: true
          schema:
            type: string
          description: Unique identifier of the user
          example: "user-123-xyz"
      responses:
        '200':
          description: Successfully retrieved domain reservation status
          content:
            application/json:
              schema:
                type: object
                oneOf:
                  - type: object
                    properties:
                      status:
                        type: string
                        enum: [paid]
                      message:
                        type: string
                        example: "Payment successful"
                      reserved_domains:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              example: "example.ee"
                            expire_at:
                              type: string
                              format: date-time
                              example: "2024-12-31T23:59:59Z"
                              description: "Expiration date and time of the domain reservation"
                  - type: object
                    properties:
                      status:
                        type: string
                        enum: [pending, failed]
                      message:
                        type: string
                        example: "Payment pending"
                      names:
                        type: array
                        items:
                          type: string
                        description: List of domain names in the reservation
                        example: ["example.ee", "example2.ee"]
        '404':
          description: Reserved domain invoice not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Reserved domain invoice not found"
      security:
        - ipRestriction: []
          ApiTokenAuth: []


  /api/v1/business_registry/reserve_domains:
    post:
      tags:
        - Business Registry
      summary: Reserve domains without payment
      description: Creates domain reservations without requiring immediate payment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - domain_names
              properties:
                domain_names:
                  type: array
                  items:
                    type: string
                    pattern: '^[\p{L}\p{N}\-\.]+$'
                  minItems: 1
                  maxItems: 20
                  description: Array of domain names to reserve
                  example: ["example.ee", "example2.ee"]
      responses:
        '201':
          description: Domains successfully reserved
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Domains reserved successfully"
                  reserved_domains:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: "example.ee"
                        password:
                          type: string
                          example: "abc123xyz"
                        expire_at:
                          type: string
                          format: date-time
                          example: "2024-12-31T23:59:59Z"
                          description: "Expiration date and time of the domain reservation"
                  user_unique_id:
                    type: string
                    example: "f8d51313-b"
        '400':
          description: Bad request - Invalid parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid parameter: domain_names must be a non-empty array of valid domain names"
        '422':
          description: Unprocessable Entity - Validation failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "The maximum number of domain names per request is 20"
      security:
        - ipRestriction: []
          ApiTokenAuth: []


  /api/v1/business_registry/reserve_domains/{user_unique_id}:
    get:
      tags:
        - Business Registry
      summary: Get reserved domains information
      description: Retrieve information about previously reserved domains using user_unique_id
      parameters:
        - name: user_unique_id
          in: path
          required: true
          schema:
            type: string
          example: "f8d51313-b"
          description: Unique identifier received after reserving domains
      responses:
        '200':
          description: List of reserved domains
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      example: "example1.ee"
                    password:
                      type: string
                      example: "0b23bf0decfb2724ebd37e46715b63d8"
                    expire_at:
                      type: string
                      format: date-time
                      example: "2024-12-13T12:31:24.921+02:00"
        '404':
          description: Reserved domains not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Reserved domains not found"
      security:
        - ipRestriction: []
          ApiTokenAuth: []


components:
  securitySchemes:
    ipRestriction:
      type: apiKey
      name: X-Real-IP
      in: header
      description: Access is restricted to allowed IP addresses configured in business_registry_allowed_ips environment variable

    ApiTokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: |
        API token authentication. Token must be provided in the Authorization header.
        Format: <token>
        Tokens are configured via the business_registry_api_tokens environment variable.

  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
      required:
        - error

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized access
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    UnprocessableEntity:
      description: Unprocessable entity
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
              details:
                type: array
                items:
                  type: string
